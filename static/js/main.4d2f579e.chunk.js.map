{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","alt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","console","log","tweets","setTweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","displayName","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4d2f579e.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firebaseInstance = firebase;\r\n  export const authService =firebase.auth();\r\n  export const dbService = firebase.firestore();\r\n  export const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name,value},\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => { \r\n        event.preventDefault();\r\n        try {\r\n          let data;\r\n          if(newAccount) {\r\n              data = await authService.createUserWithEmailAndPassword(email,password);\r\n          } else {\r\n              data = await authService.signInWithEmailAndPassword(email,password);\r\n          }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name},\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name =\"google\">Continue with Google</button>\r\n                <button onClick={onSocialClick} name =\"github\">Continue with Github</button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Tweet = ({tweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if(ok) {\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            if (tweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { value},\r\n        } = event;\r\n        setNewTweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({text:newTweet});\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n            <>\r\n                <form onSubmit={onSubmit}>\r\n                    <input onChange={onChange} value={newTweet} required />\r\n                    <input type=\"submit\" value=\"Update Tweet\"/>\r\n                </form>\r\n                <button onClick={toggleEditing}>Cancel</button>\r\n            </>\r\n            ) : (\r\n            <>    \r\n            <h4>{tweetObj.text}</h4>\r\n            {tweetObj.attachmentUrl && (<img src={tweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"img\"/>)}\r\n            {isOwner && (\r\n                <>\r\n                    <button onClick={onDeleteClick}>Delete Tweet</button>\r\n                    <button onClick={toggleEditing}>Edit Tweet</button>\r\n                </>\r\n            )}\r\n            </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nconst TweetFactory = ({userObj}) => {\r\n    \r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment,setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n        const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"tweets\").add({\r\n            text: tweet,\r\n            createdAt : Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setTweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n        <input\r\n            value={tweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Tweet\"/>\r\n            {attachment && (\r\n            <div>\r\n                <img src={attachment} width=\"50px\" height=\"50px\" alt=\"img\" />\r\n                <button onClick={onClearAttachment}>Clear</button>\r\n            </div>\r\n            )}\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default TweetFactory;","import { dbService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    console.log(userObj);\r\n    const [tweets, setTweets] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"tweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setTweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n       <TweetFactory userObj={userObj} />\r\n        <div>\r\n            {tweets.map((tweet) => (\r\n               <Tweet \r\n               key={tweet.id} \r\n               tweetObj ={tweet}\r\n               isOwner={tweet.creatorId === userObj.uid}\r\n               />\r\n            ))}\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ userObj, refreshUser}) => {\r\n\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if( userObj.newDisplayName !== newDisplayName) {\r\n            await userObj.updateProfile({displayName : newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n    // const getMyTweets = async () => {\r\n    //     const tweets = await dbService.collection(\"tweets\")\r\n    //     .where(\"creatorId\", \"==\", userObj.uid)\r\n    //     .orderBy(\"createdAt\",\"asc\")\r\n    //     .get();\r\n\r\n    //     console.log(tweets.docs.map((doc) => doc.data()));\r\n    // };\r\n    // useEffect(() => {\r\n    //     getMyTweets();\r\n    // }, []);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                onChange={onChange} \r\n                type=\"text\" \r\n                placeholder=\"Display name\"\r\n                value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                </Route>\r\n                </>\r\n                ): (\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import { useEffect,useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName : user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n   const user = authService.currentUser;\n   setUserObj({\n     uid: user.uid,\n     displayName: user.displayName,\n     updateProfile: (args) => user.updateProfile(args),\n   });\n  };\n\n  return (\n    <>\n    {init ? ( <AppRouter\n    refreshUser={refreshUser}\n    isLoggedIn={Boolean(userObj)}\n    userObj={userObj}\n    />\n     ) : (\n      \"initializing...\"\n     )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}