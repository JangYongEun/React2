{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","alt","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","console","log","tweets","setTweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","displayName","signOut","push","Navigation","display","justifyContent","marginTopL","to","marginRight","marginLeft","FlexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39590477.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firebaseInstance = firebase;\r\n  export const authService =firebase.auth();\r\n  export const dbService = firebase.firestore();\r\n  export const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name,value},\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => { \r\n        event.preventDefault();\r\n        try {\r\n          let data;\r\n          if(newAccount) {\r\n              data = await authService.createUserWithEmailAndPassword(email,password);\r\n          } else {\r\n              data = await authService.signInWithEmailAndPassword(email,password);\r\n          }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter,faGoogle,faGithub,} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name},\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30}}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name =\"google\" className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle}/></button>\r\n                <button onClick={onSocialClick} name =\"github\" className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub}/></button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Tweet = ({tweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if(ok) {\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            if (tweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { value},\r\n        } = event;\r\n        setNewTweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({text:newTweet});\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"tweet\">\r\n            {editing ? (\r\n            <>\r\n                <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n                    <input onChange={onChange} value={newTweet} required placeholder=\"Edit your tweet\" autoFocus className=\"formInput\" />\r\n                    <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\"/>\r\n                </form>\r\n                <button onClick={toggleEditing} className=\"formBtn cancelBtn\" >Cancel</button>\r\n            </>\r\n            ) : (\r\n            <>    \r\n            <h4>{tweetObj.text}</h4>\r\n            {tweetObj.attachmentUrl && (<img src={tweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"img\"/>)}\r\n            {isOwner && (\r\n                <div className=\"tweet__actions\">\r\n                    <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash}/>\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt}/>\r\n                    </span>\r\n                </div>\r\n            )}\r\n            </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus,faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nconst TweetFactory = ({userObj}) => {\r\n    \r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment,setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if( tweet == \"\"){\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n        const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"tweets\").add({\r\n            text: tweet,\r\n            createdAt : Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setTweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n        <input\r\n            className=\"factoryInput__input\"\r\n            value={tweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n            />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\" >\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus}/>\r\n            </label>\r\n            <input\r\n             id=\"attach-file\" \r\n             type=\"file\" \r\n             accept=\"image/*\" \r\n             onChange={onFileChange}\r\n             style={{\r\n                 opacity:0,\r\n             }} \r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryFrom__attachment\">\r\n                    <img\r\n                    src={attachment}\r\n                    style={{\r\n                        backgroundImage:attachment,\r\n                    }}\r\n                    />\r\n                    <div className=\"factoyForm__Clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes}/>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default TweetFactory;","import { dbService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    console.log(userObj);\r\n    const [tweets, setTweets] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"tweets\")\r\n        .orderBy(\"createdAt\",\"desc\")\r\n        .onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setTweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n       <TweetFactory userObj={userObj} />\r\n       <div style={{marginTop : 30}}>\r\n            {tweets.map((tweet) => (\r\n               <Tweet \r\n               key={tweet.id} \r\n               tweetObj ={tweet}\r\n               isOwner={tweet.creatorId === userObj.uid}\r\n               />\r\n            ))}\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ userObj, refreshUser}) => {\r\n\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if( userObj.newDisplayName !== newDisplayName) {\r\n            await userObj.updateProfile({displayName : newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n    // const getMyTweets = async () => {\r\n    //     const tweets = await dbService.collection(\"tweets\")\r\n    //     .where(\"creatorId\", \"==\", userObj.uid)\r\n    //     .orderBy(\"createdAt\",\"asc\")\r\n    //     .get();\r\n\r\n    //     console.log(tweets.docs.map((doc) => doc.data()));\r\n    // };\r\n    // useEffect(() => {\r\n    //     getMyTweets();\r\n    // }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                onChange={onChange} \r\n                type=\"text\" \r\n                placeholder=\"Display name\"\r\n                value={newDisplayName}\r\n                autoFocus\r\n                className=\"formInput\"\r\n                />\r\n                <input \r\n                type=\"submit\" \r\n                value=\"Update Profile\" \r\n                className=\"formBtn\" \r\n                style={{ marginTop: 10,}} \r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n            </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faUber } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTopL: 50}}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10}}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\"/>\r\n                    </Link>\r\n                </li>\r\n                \r\n                <li>\r\n                    <Link to=\"/profile\"\r\n                    style={{\r\n                        marginLeft:10,\r\n                        display:\"flex\",\r\n                        FlexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize:12,\r\n                    }}\r\n                    >\r\n                     <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                     <span style={{ marginTop: 10}}>\r\n                         {userObj.displayName ? `${userObj.displayName}의 Profile`\r\n                         : \"Profile\"}\r\n                     </span>\r\n                     </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <div\r\n                style={{\r\n                    maxWidth: 890,\r\n                    width: \"100%\",\r\n                    margin: \"0 auto\",\r\n                    margin: \"0 auto\",\r\n                    marginTop : 80,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n\r\n                }}>\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                </Route>\r\n                </div>\r\n                ): (\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import { useEffect,useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName : user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n   const user = authService.currentUser;\n   setUserObj({\n     uid: user.uid,\n     displayName: user.displayName,\n     updateProfile: (args) => user.updateProfile(args),\n   });\n  };\n\n  return (\n    <>\n    {init ? ( <AppRouter\n    refreshUser={refreshUser}\n    isLoggedIn={Boolean(userObj)}\n    userObj={userObj}\n    />\n     ) : (\n      \"initializing...\"\n     )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}